//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ABC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ABCEntities1 : DbContext
    {
        public ABCEntities1()
            : base("name=ABCEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Paper> Papers { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Question1> Questions1 { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
        public virtual DbSet<QuestionPaper> QuestionPapers { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Country_> Country_ { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Gender> Genders { get; set; }
        public virtual DbSet<Provinces_> Provinces_ { get; set; }
        public virtual DbSet<UserType> UserTypes { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual ObjectResult<ManageQuestion_Result> ManageQuestion(string operation, Nullable<int> id, string name, Nullable<int> marks, string createdBy, Nullable<System.DateTime> createdDate, string updatedBy, Nullable<System.DateTime> updatedDate, Nullable<bool> isNepali, Nullable<int> topicID)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var marksParameter = marks.HasValue ?
                new ObjectParameter("Marks", marks) :
                new ObjectParameter("Marks", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ManageQuestion_Result>("ManageQuestion", operationParameter, idParameter, nameParameter, marksParameter, createdByParameter, createdDateParameter, updatedByParameter, updatedDateParameter, isNepaliParameter, topicIDParameter);
        }
    
        public virtual ObjectResult<LoadDropdownList_Result> LoadDropdownList(string searchText, Nullable<int> searchId, Nullable<bool> isNepali)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            var searchIdParameter = searchId.HasValue ?
                new ObjectParameter("SearchId", searchId) :
                new ObjectParameter("SearchId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadDropdownList_Result>("LoadDropdownList", searchTextParameter, searchIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<string> AddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<AddSubject_Result> AddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddSubject_Result>("AddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<string> AddTopic(string operation, Nullable<int> topicID, string topicName, Nullable<int> subjectID, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AddTopic", operationParameter, topicIDParameter, topicNameParameter, subjectIDParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<iManageQuestion_Result> iManageQuestion(string operation, Nullable<int> id, string name, Nullable<int> marks, string createdBy, Nullable<System.DateTime> createdDate, string updatedBy, Nullable<System.DateTime> updatedDate, Nullable<bool> isNepali, Nullable<int> topicID)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var marksParameter = marks.HasValue ?
                new ObjectParameter("Marks", marks) :
                new ObjectParameter("Marks", typeof(int));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var updatedByParameter = updatedBy != null ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(string));
    
            var updatedDateParameter = updatedDate.HasValue ?
                new ObjectParameter("UpdatedDate", updatedDate) :
                new ObjectParameter("UpdatedDate", typeof(System.DateTime));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iManageQuestion_Result>("iManageQuestion", operationParameter, idParameter, nameParameter, marksParameter, createdByParameter, createdDateParameter, updatedByParameter, updatedDateParameter, isNepaliParameter, topicIDParameter);
        }
    
        public virtual ObjectResult<GenerateRandomQuestionPaper_Result> GenerateRandomQuestionPaper(string flag, Nullable<int> numberOfQuestions, string paperTitle, string paperDescription, string examName, Nullable<bool> isNepali)
        {
            var flagParameter = flag != null ?
                new ObjectParameter("Flag", flag) :
                new ObjectParameter("Flag", typeof(string));
    
            var numberOfQuestionsParameter = numberOfQuestions.HasValue ?
                new ObjectParameter("NumberOfQuestions", numberOfQuestions) :
                new ObjectParameter("NumberOfQuestions", typeof(int));
    
            var paperTitleParameter = paperTitle != null ?
                new ObjectParameter("PaperTitle", paperTitle) :
                new ObjectParameter("PaperTitle", typeof(string));
    
            var paperDescriptionParameter = paperDescription != null ?
                new ObjectParameter("PaperDescription", paperDescription) :
                new ObjectParameter("PaperDescription", typeof(string));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GenerateRandomQuestionPaper_Result>("GenerateRandomQuestionPaper", flagParameter, numberOfQuestionsParameter, paperTitleParameter, paperDescriptionParameter, examNameParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<UserInsertUpdate_Result> UserInsertUpdate(string action, Nullable<int> userId, string username, string email, string passwordHash, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<int> genderId, string phoneNumber, string address, Nullable<int> countryId, Nullable<int> provinceId, Nullable<int> zoneId, Nullable<int> districtId, Nullable<int> userTypeId, string profilePicture)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("ProfilePicture", profilePicture) :
                new ObjectParameter("ProfilePicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserInsertUpdate_Result>("UserInsertUpdate", actionParameter, userIdParameter, usernameParameter, emailParameter, passwordHashParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, genderIdParameter, phoneNumberParameter, addressParameter, countryIdParameter, provinceIdParameter, zoneIdParameter, districtIdParameter, userTypeIdParameter, profilePictureParameter);
        }
    
        public virtual ObjectResult<iUserInsertUpdate_Result> iUserInsertUpdate(string action, Nullable<int> userId, string username, string email, string passwordHash, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<int> genderId, string phoneNumber, string address, Nullable<int> countryId, Nullable<int> provinceId, Nullable<int> zoneId, Nullable<int> districtId, Nullable<int> userTypeId, string profilePicture)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("ProfilePicture", profilePicture) :
                new ObjectParameter("ProfilePicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iUserInsertUpdate_Result>("iUserInsertUpdate", actionParameter, userIdParameter, usernameParameter, emailParameter, passwordHashParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, genderIdParameter, phoneNumberParameter, addressParameter, countryIdParameter, provinceIdParameter, zoneIdParameter, districtIdParameter, userTypeIdParameter, profilePictureParameter);
        }
    
        public virtual ObjectResult<sUserInsertUpdate_Result> sUserInsertUpdate(string action, Nullable<int> userId, string username, string email, string passwordHash, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<int> genderId, string phoneNumber, string address, Nullable<int> countryId, Nullable<int> provinceId, Nullable<int> zoneId, Nullable<int> districtId, Nullable<int> userTypeId, string profilePicture)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("ProfilePicture", profilePicture) :
                new ObjectParameter("ProfilePicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sUserInsertUpdate_Result>("sUserInsertUpdate", actionParameter, userIdParameter, usernameParameter, emailParameter, passwordHashParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, genderIdParameter, phoneNumberParameter, addressParameter, countryIdParameter, provinceIdParameter, zoneIdParameter, districtIdParameter, userTypeIdParameter, profilePictureParameter);
        }
    
        public virtual ObjectResult<uUserInsertUpdate_Result> uUserInsertUpdate(string action, Nullable<int> userId, string username, string email, string passwordHash, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<int> genderId, string phoneNumber, string address, Nullable<int> countryId, Nullable<int> provinceId, Nullable<int> zoneId, Nullable<int> districtId, Nullable<int> userTypeId, string profilePicture)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("ProfilePicture", profilePicture) :
                new ObjectParameter("ProfilePicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uUserInsertUpdate_Result>("uUserInsertUpdate", actionParameter, userIdParameter, usernameParameter, emailParameter, passwordHashParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, genderIdParameter, phoneNumberParameter, addressParameter, countryIdParameter, provinceIdParameter, zoneIdParameter, districtIdParameter, userTypeIdParameter, profilePictureParameter);
        }
    
        public virtual ObjectResult<dUserInsertUpdate_Result> dUserInsertUpdate(string action, Nullable<int> userId, string username, string email, string passwordHash, string firstName, string lastName, Nullable<System.DateTime> dateOfBirth, Nullable<int> genderId, string phoneNumber, string address, Nullable<int> countryId, Nullable<int> provinceId, Nullable<int> zoneId, Nullable<int> districtId, Nullable<int> userTypeId, string profilePicture)
        {
            var actionParameter = action != null ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var genderIdParameter = genderId.HasValue ?
                new ObjectParameter("GenderId", genderId) :
                new ObjectParameter("GenderId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryIdParameter = countryId.HasValue ?
                new ObjectParameter("CountryId", countryId) :
                new ObjectParameter("CountryId", typeof(int));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            var zoneIdParameter = zoneId.HasValue ?
                new ObjectParameter("ZoneId", zoneId) :
                new ObjectParameter("ZoneId", typeof(int));
    
            var districtIdParameter = districtId.HasValue ?
                new ObjectParameter("DistrictId", districtId) :
                new ObjectParameter("DistrictId", typeof(int));
    
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("UserTypeId", userTypeId) :
                new ObjectParameter("UserTypeId", typeof(int));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("ProfilePicture", profilePicture) :
                new ObjectParameter("ProfilePicture", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dUserInsertUpdate_Result>("dUserInsertUpdate", actionParameter, userIdParameter, usernameParameter, emailParameter, passwordHashParameter, firstNameParameter, lastNameParameter, dateOfBirthParameter, genderIdParameter, phoneNumberParameter, addressParameter, countryIdParameter, provinceIdParameter, zoneIdParameter, districtIdParameter, userTypeIdParameter, profilePictureParameter);
        }
    
        public virtual ObjectResult<string> UserAuthentication(string email, string password, string isAuthenticated)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isAuthenticatedParameter = isAuthenticated != null ?
                new ObjectParameter("IsAuthenticated", isAuthenticated) :
                new ObjectParameter("IsAuthenticated", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserAuthentication", emailParameter, passwordParameter, isAuthenticatedParameter);
        }
    
        public virtual ObjectResult<aUserAuthentication_Result> aUserAuthentication(string email, string password, string isAuthenticated)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var isAuthenticatedParameter = isAuthenticated != null ?
                new ObjectParameter("IsAuthenticated", isAuthenticated) :
                new ObjectParameter("IsAuthenticated", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aUserAuthentication_Result>("aUserAuthentication", emailParameter, passwordParameter, isAuthenticatedParameter);
        }
    
        public virtual ObjectResult<sAddExam_Result> sAddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sAddExam_Result>("sAddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<uAddExam_Result> uAddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uAddExam_Result>("uAddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<dAddExam_Result> dAddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dAddExam_Result>("dAddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<iAddExam_Result> iAddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iAddExam_Result>("iAddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<fAddExam_Result> fAddExam(string operation, Nullable<int> id, string examName, string createdBy, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var examNameParameter = examName != null ?
                new ObjectParameter("ExamName", examName) :
                new ObjectParameter("ExamName", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fAddExam_Result>("fAddExam", operationParameter, idParameter, examNameParameter, createdByParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<iAddTopic_Result> iAddTopic(string operation, Nullable<int> topicID, string topicName, Nullable<int> subjectID, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iAddTopic_Result>("iAddTopic", operationParameter, topicIDParameter, topicNameParameter, subjectIDParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<sAddTopic_Result> sAddTopic(string operation, Nullable<int> topicID, string topicName, Nullable<int> subjectID, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sAddTopic_Result>("sAddTopic", operationParameter, topicIDParameter, topicNameParameter, subjectIDParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<uAddTopic_Result> uAddTopic(string operation, Nullable<int> topicID, string topicName, Nullable<int> subjectID, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uAddTopic_Result>("uAddTopic", operationParameter, topicIDParameter, topicNameParameter, subjectIDParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<dAddTopic_Result> dAddTopic(string operation, Nullable<int> topicID, string topicName, Nullable<int> subjectID, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var topicIDParameter = topicID.HasValue ?
                new ObjectParameter("TopicID", topicID) :
                new ObjectParameter("TopicID", typeof(int));
    
            var topicNameParameter = topicName != null ?
                new ObjectParameter("TopicName", topicName) :
                new ObjectParameter("TopicName", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dAddTopic_Result>("dAddTopic", operationParameter, topicIDParameter, topicNameParameter, subjectIDParameter, isNepaliParameter);
        }
    
        [DbFunction("ABCEntities1", "FnResponse")]
        public virtual IQueryable<FnResponse_Result> FnResponse(string status, string code, string message)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<FnResponse_Result>("[ABCEntities1].[FnResponse](@Status, @Code, @Message)", statusParameter, codeParameter, messageParameter);
        }
    
        public virtual ObjectResult<GetQuestionPaper_Result> GetQuestionPaper(Nullable<int> paperId, Nullable<bool> isNepali)
        {
            var paperIdParameter = paperId.HasValue ?
                new ObjectParameter("PaperId", paperId) :
                new ObjectParameter("PaperId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetQuestionPaper_Result>("GetQuestionPaper", paperIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<sAddSubject_Result> sAddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sAddSubject_Result>("sAddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<iAddSubject_Result> iAddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<iAddSubject_Result>("iAddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<uAddSubject_Result> uAddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uAddSubject_Result>("uAddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<dAddSubject_Result> dAddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dAddSubject_Result>("dAddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    
        public virtual ObjectResult<eAddSubject_Result> eAddSubject(string operation, Nullable<int> subjectID, string subjectName, Nullable<int> examId, Nullable<bool> isNepali)
        {
            var operationParameter = operation != null ?
                new ObjectParameter("Operation", operation) :
                new ObjectParameter("Operation", typeof(string));
    
            var subjectIDParameter = subjectID.HasValue ?
                new ObjectParameter("SubjectID", subjectID) :
                new ObjectParameter("SubjectID", typeof(int));
    
            var subjectNameParameter = subjectName != null ?
                new ObjectParameter("SubjectName", subjectName) :
                new ObjectParameter("SubjectName", typeof(string));
    
            var examIdParameter = examId.HasValue ?
                new ObjectParameter("ExamId", examId) :
                new ObjectParameter("ExamId", typeof(int));
    
            var isNepaliParameter = isNepali.HasValue ?
                new ObjectParameter("IsNepali", isNepali) :
                new ObjectParameter("IsNepali", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<eAddSubject_Result>("eAddSubject", operationParameter, subjectIDParameter, subjectNameParameter, examIdParameter, isNepaliParameter);
        }
    }
}
